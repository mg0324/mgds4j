{"name":"Mgds4j","tagline":"梦来梦往 自己实现的数据源与连接池工具，全称 mgang datasource for java","body":"mgds4j\r\n======\r\n\r\n梦来梦往 自己实现的数据源与连接池工具，全称 mgang datasource for java\r\n\r\n\r\n##2014-12-1\r\n1.生成javadoc文档，微调javadoc注释。<br/>\r\n2.export出的mgds4j-2.1.jar包放到outjar文件夹下，方便依赖使用。\r\n\r\n##2014-11-28\r\n升级日志：v1.1<br/>\r\n1. 将等待时间抽出到配置文件中，默认是2000毫秒。<br/>\r\n\r\n\r\n升级日志：v2.0<br/>\r\n因为考虑到数据源和连接池的概念，数据源是使用连接池技术来缓存数据库连接供外使用的工具对象。<br/>\r\n所以，将MgDataSource.java和MgConnectionPool.java合并成一个文件MgDataSource.java.<br/>\r\n并测试通过。\r\n\r\n升级日志：v2.1<br/>\r\n1. 升级配置文件properties为xml<br/>\r\n2. 加入工厂模式，单例模式，使用反射来实现。<br/>\r\n单例模式：<br/>\r\n\r\n\tprivate static MgDataSource mgds = null;\r\n\tprivate MgDataSource(){\r\n\t\t//私有的构造函数\r\n\t}\r\n\t/**\r\n\t * 得到MgDataSource的单例对象\r\n\t * @return\r\n\t */\r\n\tpublic static MgDataSource getInstance(){\r\n\t\tif(null == mgds){\r\n\t\t\tmgds = new MgDataSource();\r\n\t\t}\r\n\t\treturn mgds;\r\n\t}\r\n\r\n工厂模式：<br/>\r\n\r\n\t//创建工厂\r\n\tMgDataSourceFactory.build();\r\n\t//从工厂得到数据源\r\n\tds = MgDataSourceFactory.getMgDataSource(\"ds\");\r\n\r\n反射机制核心：<br/>\r\n\r\n\t//通过调用static函数getInstance来得到单例对象\r\n\tClass dsClass = Class.forName(clazz);\r\n\tds = (MgDataSource) dsClass.getMethod(\"getInstance\", null).invoke(dsClass, null);\r\n\tfactory.put(name, ds);\r\n\r\n\t//得到dataSource下的property节点\r\n\tIterator ps = dsElement.elementIterator(\"property\"); \r\n\twhile(ps.hasNext()){\r\n\t\tElement propertyElement = (Element) ps.next();\r\n\t\tString key = propertyElement.attributeValue(\"key\");\r\n\t\tString value = propertyElement.attributeValue(\"value\");\r\n\t\tString type = propertyElement.attributeValue(\"type\");\r\n\t\tif(type.equals(\"string\")){\r\n\t\t\tMethod m = MgDataSource.class.getMethod(\"set\"+UpperFirst(key),String.class);\r\n\t\t\tm.invoke(ds, value);\r\n\t\t}else if(type.equals(\"int\")){\r\n\t\t\tMethod m = MgDataSource.class.getMethod(\"set\"+UpperFirst(key),int.class);\r\n\t\t\tm.invoke(ds, Integer.parseInt(value.trim()));\r\n\t\t}\r\n\t}\r\n \r\n##2014-11-27\r\n今天我本来是解决struts2参数传递有时候会出现null的问题的，但是没想在此过程中碰到了45s问题和<br/>\r\n数据库连接connection refused的问题。然后，和这两个问题一较劲，我就来解决这边了。<br/>\r\n\r\n还好的是，都有了一定的突破。<br/>\r\n45s问题已在网上找到解决方法，但是我还是会在我的网易博客中来写到的。<br/>\r\n第二个问题就是数据库的连接问题了，查了一些资料，发现可能是数据源的问题，然后我就来到了数据源<br/>\r\n与连接池的对面。<br/>\r\n\r\n也成功的使用了常用的数据源dbcp和c3p0这两个。<br/>\r\n然后，我就想到了自己来写这样一个数据源，利用连接池技术。当然可能做不到像dbcp和c3p0这样的成<br/>熟技术好用。但是，我还是会自己去实现一番，就算自己以后还是用专业的数据源，这样做了也是一种进步。<br/>\r\n\r\n如此，mgds4j这个项目也就诞生了。\r\n***\r\n今天算是我完成的1.0版本。<br/>\r\n1. 实现连接池缓存数据库连接<br/>\r\n2. 数据源得到连接，归还连接<br/>\r\n3. 当无可用连接，按一定的长度自动增长连接池<br/>","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}